ucliGUI::start /afs/umbc.edu/users/b/r/brianw5/home/CMPE691/hw6/aes/simv -ucligui 
set ucliGUI::state
set ucliGUI::state
ucliCore::getToolPID
synopsys::env hasTB
trigger_hier_stack_context_switch 0
synopsys::xml set_array_limit <data limit="50" />
synopsys::xml set_depth_limit <data limit="100" />
synopsys::xml set_string_limit <data limit="1000" />
synopsys::xml set_only_active_frame <data value="1" />
synopsys::xml set_variable_frame_id <data value="1" />
synUtils::setDVEInitPhase 1
synopsys::dump -type VPD -file /afs/umbc.edu/users/b/r/brianw5/home/CMPE691/hw6/aes/inter.vpd -locking
synopsys::dump -autoflush on -fid VPD1
set ::dve_fid VPD1
synUtils::setDVEInitPhase 0
ucliCore::getToolPID
synUtils::sendTool -active _icl_setToolSocket /tmp/smlnpJsZFw3
synUtils::sendTool -active {_icl_start_rpc -version "L-2016.06-SP2-7_Full64" -sync_file /tmp/vcs_dve_rpc.brianw5.25220}
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.brianw5.25220}
config endofsim noexit
config onfail enable all
config syscaddplainmembers
config syscaddsourcenames
config syscaddstructtypes
synopsys::listing -disable
# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Thu Nov 2 03:13:34 2017
# Designs open: 1
#   Sim: /afs/umbc.edu/users/b/r/brianw5/home/CMPE691/hw6/aes/simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: /AES_128_TB
#   Wave.1: 7 signals
#   Group count = 1
#   Group Group1 signal count = 7
# End_DVE_Session_Save_Info
# DVE version: L-2016.06-SP2-7_Full64
# DVE build date: Jul 20 2017 21:14:36
#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">
# Application preferences
#<WindowLayout>
# DVE top-level session
# Create and position top-level window: TopLevel.1
set TopLevel.1 TopLevel.1
# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set Stack.1 Stack.1
set Class.1 Class.1
set Object.1 Object.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Local.1 Local.1
set Member.1 Member.1
set Console.1 Console.1
# MDI window settings
set Source.1 Source.1
# End MDI window settings
# Create and position top-level window: TopLevel.2
set TopLevel.2 TopLevel.2
# Docked window settings
# MDI window settings
set Wave.1 Wave.1
# End MDI window settings
#</WindowLayout>
#<Database>
#</Database>
# DVE Global setting session:
# Global: Breakpoints
# Global: Bus
# Global: Expressions
# Global: Signal Time Shift
# Global: Signal Compare
# Global: Signal Groups
set _session_group_1 Group1
set Group1 "$_session_group_1"
# Global: Highlighting
# Global: Stack
# Post database loading setting...
# Save global setting...
# Wave/List view global setting
# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {     if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {         gui_close_window -window $__top     } }
# DVE View/pane content session:
# Hier 'Hier.1'
catch {gui_list_expand -id ${Hier.1} /AES_128_TB}
catch {gui_list_expand -id ${Hier.1} /AES_128_TB/UUT}
catch {gui_list_select -id ${Hier.1} {/AES_128_TB/UUT/SBOX_ERR}}
# Class 'Class.1'
# Member 'Member.1'
# Data 'Data.1'
catch { gui_list_select -id ${Data.1} {/AES_128_TB/UUT/SBOX_ERR/DELAY_CLK }}
# Source 'Source.1'
# Warning: Class view not found.
# View 'Wave.1'
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
set origGroupCreationState [gui_list_create_group_when_add -wave]
synopsys::dump -add {/AES_128_TB/UUT/FAULT_DETECTED /AES_128_TB/UUT/SBOX_ERR/DATA_REG /AES_128_TB/UUT/SBOX_ERR/DELAY_CLK /AES_128_TB/UUT/SBOX_ERR/ERR_DETECT /AES_128_TB/UUT/SBOX_ERR/OUT_ACTUAL /AES_128_TB/UUT/SBOX_ERR/OUT_CORRECT /AES_128_TB/UUT/SBOX_ERR/SBOX_OUT_EFF_SIG } -aggregates  -fid VPD1
if {$origGroupCreationState} { 	gui_list_create_group_when_add -wave -enable }
if { $groupExD } {  gui_msg_report -code DVWW028 }
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} { 	gui_set_active_window -window ${TopLevel.1} 	gui_set_active_window -window ${Source.1} 	gui_set_active_window -window ${DLPane.1} }
if {[gui_exist_window -window ${TopLevel.2}]} { 	gui_set_active_window -window ${TopLevel.2} 	gui_set_active_window -window ${Wave.1} }
#</Session>
synopsys::run
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
synopsys::xml get_stop_data
synopsys::xml {frames <data updateType="preserve" itemId="none" viewId="Stack.1" />}
if [catch {gui_sim_terminate}] {gui_sim_terminate -kill}
synopsys::finish
set ucliGUI::state
set ucliGUI::state
ucli_exit
